<?phpnamespace App\Http\PayModels\Online;use App\ApiModel;class Yitongdapay extends ApiModel{    public static $method = 'post'; //提交方式 必加属性 post or get    public static $reqType = 'form'; //提交类型 必加属性 form or curl or fileGet    public static $payWay = 0; //是否需要生成二维码 必加属性 2 3 4 5    public static $resType = 'json'; //curl file_get_contents 返回的数据类型json/xml/str    public static $unit = 1; //金额单位  默认1为元  2:单位为分    public static $postType = false; //数据提交类型 默认false 一维数组 or json/str/多维数组    public static $httpBuildQuery = false; //默认false/true为curl提交参数需要http_build_query    public static $isAPP = false; // 判断是否跳转APP 默认false    /**     * @param array $reqData 接口传递的参数     * @param array $payConf     * @return array     */    public static function getAllInfo($reqData, $payConf)    {        /**         * 参数赋值，方法间传递数组         */        $order     = $reqData['order'];        $amount    = $reqData['amount'];        $bank      = $reqData['bank'];        $ServerUrl = $reqData['ServerUrl']; // 异步通知地址        $returnUrl = $reqData['returnUrl']; // 同步通知地址        //判断是否需要跳转链接 is_app=1开启 2-关闭        if ($payConf['is_app'] == 1) {            self::$isAPP = true;        }        self::$unit = 2;        //TODO: do something        $data               = array();        $data['merchantId'] = $payConf['business_num']; //商户编号        $data['outTradeNo'] = $order; //订单编号        $data['payType']    = $bank; //支付方式        if ($payConf['pay_way'] == '1') {            unset($data['payType']);            $data['cardType'] = '1'; //卡类型: 1-借记卡            $data['bankNo']   = $bank; //银行代号            $data['userType'] = '1'; //用户类型：1-个人网银，2-企业网银        }        if ($payConf['pay_way'] == '9') {            $data['cardNo'] = '123456789';        }        $data['payMoney']  = $amount * 100; //订单金额        $data['goodsDesc'] = 'PAY';        $data['ip']        = self::getIp();        $data['notifyUrl'] = $ServerUrl; //异步通知地址        $data['returnUrl'] = $returnUrl; //同步地址        $signStr           = self::getSignStr($data, true, true);        $data["sign"]      = strtoupper(self::getMd5Sign("{$signStr}", $payConf['md5_private_key']));        if ($payConf['pay_way'] != 9 && $payConf['pay_way'] != 1) {            self::$reqType        = 'curl';            self::$httpBuildQuery = true;            self::$payWay         = $payConf['pay_way'];        }        unset($reqData);        return $data;    }    //回调金额处理    public static function getVerifyResult($request)    {        $req                = $request->all();        $data['payMoney']   = $req['payMoney'] / 100;        $data['outTradeNo'] = $req['outTradeNo'];        return $data;    }    //回调特殊处理    public static function SignOther($type, $data, $payConf)    {        $sign = $data['sign'];        unset($data['sign']);        $signStr           = self::getSignStr($data, true, true);        $signTrue = strtoupper(self::getMd5Sign("{$signStr}", $payConf['md5_private_key']));        if ($sign == $signTrue && $data["payStatus"] == "1") {            return true;        } else {            return false;        }    }}