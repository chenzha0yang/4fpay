<?phpnamespace App\Http\PayModels\Online;use App\ApiModel;use Illuminate\Http\Request;class Yidazvpay extends ApiModel{    public static $method = 'post'; //提交方式 必加属性 post or get    public static $reqType = 'form'; //提交类型 必加属性 form or curl or fileGet    public static $payWay = 0; //是否需要生成二维码 必加属性 2 3 4 5    public static $resType = 'json'; //curl file_get_contents 返回的数据类型json/xml/str    public static $unit = 1; //金额单位  默认1为元  2:单位为分    public static $postType = false; //数据提交类型 默认false 一维数组 or json/str/多维数组    public static $httpBuildQuery = false; //默认false/true为curl提交参数需要http_build_query    public static $isAPP = false; // 判断是否跳转APP 默认false    public static $pcWap = 2;    /**     * @param array $reqData 接口传递的参数     * @param array $payConf     * @return array     */    public static function getAllInfo($reqData, $payConf)    {        /**         * 参数赋值，方法间传递数组         */        $order     = $reqData['order'];        $amount    = $reqData['amount'];        $bank      = $reqData['bank'];        $ServerUrl = $reqData['ServerUrl']; // 异步通知地址        $returnUrl = $reqData['returnUrl']; // 同步通知地址        //TODO: do something        self::$reqType        = 'curl';        self::$httpBuildQuery = true;        self::$payWay         = $payConf['pay_way'];        self::$unit           = 2;        self::$resType        = 'other';        self::$isAPP          = true;        if ($payConf['is_app'] == 1) {            self::$pcWap = 1;        }        $data               = [];        $data['mchId']      = $payConf['business_num'];        $data['appId']      = $payConf['public_key'];        $data['productId']  = $bank;        $data['mchOrderNo'] = $order;        $data['currency']   = 'cny';        $data['amount']     = (int) ($amount * 100);        $data['notifyUrl']  = $ServerUrl;        $data['returnUrl']  = $returnUrl;        $data['subject']    = $order;        $data['body']       = $order;        $data['extra']      = '';        $signStr            = self::getSignStr($data, true, true);        $data['sign']       = strtoupper(self::getMd5Sign("{$signStr}&key=", $payConf['md5_private_key']));        unset($reqData);        return $data;    }    public static function getQrcode($req)    {        $data = json_decode($req, true);        if ($data['retCode'] == 'SUCCESS') {            if (self::$pcWap == '1') {                $reqData['payUrl'] = $data['payParams']['payUrl'];            } else {                $reqData['codeUrl'] = $data['payParams']['payUrl'];            }        } else {            $reqData['retCode'] = !isset($data['retCode']) ? $data['errCode'] : $data['retCode'];            $reqData['msg']    = !isset($data['retMsg']) ? $data['errDes'] : $data['retMsg'];        }        return $reqData;    }    //回调金额处理    public static function getVerifyResult(Request $request)    {        $res                = $request->all();        $data['amount']     = $res['amount'] / 100;        $data['mchOrderNo'] = $res['mchOrderNo'];        return $data;    }    //回调处理    public static function SignOther($type, $data, $payConf)    {        $sign = $data['sign'];        unset($data['sign']);        $signStr = self::getSignStr($data, true, true);        $mySign  = strtoupper(self::getMd5Sign("{$signStr}&key=", $payConf['md5_private_key']));        if ($mySign == $sign && $data['status'] == '2' || $data['status'] == '3') {            return true;        } else {            return false;        }    }}